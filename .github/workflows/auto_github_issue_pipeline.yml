name: local makefile test

on:
  push:
    branches:
      - cicd-prod
      - cicd-train

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run install test
        run: |
          make install
      
      - name: Run tests
        id: test
        run: |
          pytest -vv || echo "test failed" > test-failure.flag

      - name: Create GitHub issue if tests fail
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const branch = process.env.GITHUB_REF.split('/').pop();

            const issueTitle = `üî¥ Test failure on branch '${branch}'`;
            const body = `
‚ùå **Test failure detected**

- Branch: \`${branch}\`
- Workflow: \`${process.env.GITHUB_WORKFLOW}\`

Please investigate the failing tests.

---

This issue was auto-generated by a GitHub Action.
`;

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'auto-generated, test-failure'
            });

            const alreadyExists = issues.data.some(issue => issue.title === issueTitle);
            if (!alreadyExists) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: body,
                labels: ['auto-generated', 'test-failure']
              });
            } else {
              console.log("An issue for this failure already exists.");
            }

      - name: Send email if tests fail
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "üî¥ Test Failure on branch ${{ github.ref_name }}"
          body: |
            ‚ùå Tests failed on branch: ${{ github.ref_name }}
            Workflow: ${{ github.workflow }}
            Run: ${{ github.run_url }}

            This email was triggered automatically by GitHub Actions.
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions <${{ secrets.MAIL_USERNAME }}>
          secure: true